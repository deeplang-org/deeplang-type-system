
type MyBool [
  True,
  False
]

type S {
  x: Bool,
  y: Bool
}

fun f1(x: MyBool) -> I32 {
  match (x) {
    True => { return 1; }
    False => { return 2; }
  }
  return 0;
}

fun f2(x: (MyBool, MyBool)) -> I32 {
  match (x) {
    (True, _) => { return 1; }
    (_, True) => { return 2; }
    (False, False) => { return 3; }
  }
  return 4;
}

type MyADT [
  A,
  B(MyBool, MyBool, MyBool)
]

fun f3(x: MyADT) -> I32 {
  match (x) {
    A => { return 1; }
    B(True, _, False) => { return 2; }
    B(False, True, _) => { return 3; }
    B(x, y, True) => { return 4; }
  }
  return 5;
}

type MyStruct {
  x: I32,
  y: MyADT,
  z: MyBool,
  w: I32,
  v: F64
}

fun f4(x: MyStruct) -> I32 {
  match (x) {
    MyStruct { x: x, y: A, z: True, w: w } => { return x + w; }
    MyStruct { y:B(True, _, _) } => { return 2; }
    MyStruct { z: False } => { return 3; } 
    MyStruct { w: 42, z: True } => { return 4; }
  }
  return 5;
}

fun f5(x: I32) -> I32 {
  match (x) {
    0 => { return 0; }
    42 => { return 42; }
    42 => { return 43; }
    1 => { return 1; }
    _ => { return 2; }
  }
  return 3;
}
