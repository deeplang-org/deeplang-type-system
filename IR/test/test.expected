{ ANF.func_src = "basic.dp":1,0-3,1; func_name = "main"; func_params = [];
  func_label = #1;
  func_body = (ANF.Jump ("basic.dp":2,9-2,10, #1, [(ANF.Int 0)])) }

{ ANF.func_src = "basicMain.dp":1,0-8,1; func_name = "main";
  func_params = [$0]; func_label = #1;
  func_body =
  (ANF.Stmt ("basicMain.dp":3,2-3,18, (ANF.Decl ($1, (ANF.Val (ANF.Int 1)))),
     (ANF.Stmt ("basicMain.dp":4,2-4,17,
        (ANF.Decl ($2, (ANF.Val (ANF.Int 2)))),
        (ANF.Stmt ("basicMain.dp":5,2-5,19,
           (ANF.Decl ($3, (ANF.Val (ANF.Float 3.)))),
           (ANF.Jump ("basicMain.dp":1,0-8,1, #1, []))))
        ))
     ))
  }

{ ANF.func_src = "controlFlow.dp":1,0-19,1; func_name = "f";
  func_params = []; func_label = #1;
  func_body =
  (ANF.Block (
     { ANF.blk_label = #2; blk_params = [];
       blk_body =
       (ANF.Block (
          { ANF.blk_label = #3; blk_params = [];
            blk_body =
            (ANF.Block (
               { ANF.blk_label = #4; blk_params = [];
                 blk_body = (ANF.Jump ("controlFlow.dp":1,0-19,1, #1, [])) },
               (ANF.Branch
                  { ANF.br_src = "controlFlow.dp":14,2-18,3;
                    br_matched = (ANF.Int 1);
                    br_branches =
                    [(1, (ANF.Jump ("controlFlow.dp":14,2-18,3, #4, [])))];
                    br_default =
                    (Some (ANF.Jump ("controlFlow.dp":14,2-18,3, #4, []))) })
               ))
            },
          (ANF.Branch
             { ANF.br_src = "controlFlow.dp":8,2-12,3;
               br_matched = (ANF.Int 1);
               br_branches =
               [(1,
                 (ANF.Jump ("controlFlow.dp":9,11-9,12, #1, [(ANF.Int 2)])))];
               br_default =
               (Some (ANF.Jump ("controlFlow.dp":8,2-12,3, #3, []))) })
          ))
       },
     (ANF.Branch
        { ANF.br_src = "controlFlow.dp":2,2-6,3; br_matched = (ANF.Int 1);
          br_branches = [(1, (ANF.Jump ("controlFlow.dp":2,2-6,3, #2, [])))];
          br_default = (Some (ANF.Jump ("controlFlow.dp":2,2-6,3, #2, []))) })
     ))
  }

{ ANF.func_src = "expr.dp":1,0-8,1; func_name = "main"; func_params = [];
  func_label = #1;
  func_body =
  (ANF.Stmt ("expr.dp":2,10-2,15,
     (ANF.Decl ($1,
        (ANF.BinOp ((ParseTree.BinOpCalculate ParseTree.BinOpAdd),
           (ANF.Int 1), (ANF.Int 2)))
        )),
     (ANF.Stmt ("expr.dp":3,14-3,19,
        (ANF.Decl ($2,
           (ANF.BinOp ((ParseTree.BinOpCalculate ParseTree.BinOpMul),
              (ANF.LVal
                 { ANF.lv_var = $1; lv_path = [];
                   lv_src = "expr.dp":3,14-3,15 }),
              (ANF.Int 3)))
           )),
        (ANF.Stmt ("expr.dp":3,10-3,19,
           (ANF.Decl ($3,
              (ANF.BinOp ((ParseTree.BinOpCalculate ParseTree.BinOpAdd),
                 (ANF.LVal
                    { ANF.lv_var = $1; lv_path = [];
                      lv_src = "expr.dp":3,10-3,11 }),
                 (ANF.LVal
                    { ANF.lv_var = $2; lv_path = [];
                      lv_src = "expr.dp":3,14-3,19 })
                 ))
              )),
           (ANF.Stmt ("expr.dp":5,12-5,17,
              (ANF.Decl ($4,
                 (ANF.BinOp ((ParseTree.BinOpCalculate ParseTree.BinOpAdd),
                    (ANF.LVal
                       { ANF.lv_var = $3; lv_path = [];
                         lv_src = "expr.dp":5,12-5,13 }),
                    (ANF.Int 4)))
                 )),
              (ANF.Stmt ("expr.dp":7,10-7,15,
                 (ANF.Decl ($5,
                    (ANF.BinOp (
                       (ParseTree.BinOpCalculate ParseTree.BinOpSub),
                       (ANF.LVal
                          { ANF.lv_var = $1; lv_path = [];
                            lv_src = "expr.dp":7,10-7,11 }),
                       (ANF.Int 3)))
                    )),
                 (ANF.Jump ("expr.dp":1,0-8,1, #1, []))))
              ))
           ))
        ))
     ))
  }

