fun main() -> #1 -- "basic.dp":1,0-3,1 =
  jump #1 (0) -- "basic.dp":2,9-2,10


fun main($1) -> #1 -- "basicMain.dp":1,0-8,1 =
  $2 = 1 -- "basicMain.dp":3,2-3,18
  $3 = 2 -- "basicMain.dp":4,2-4,17
  $4 = 3.000000 -- "basicMain.dp":5,2-5,19
  jump #1 () -- "basicMain.dp":1,0-8,1


fun useContinue() -> #1 -- "breakContinue.dp":1,0-7,1 =
  loop #2():
    block #3() =
      jump #1 () -- "breakContinue.dp":1,0-7,1
    in
    match 1 -- "breakContinue.dp":2,2-6,3:
    1 =>
      $1 = 1 -- "breakContinue.dp":3,4-3,15
      jump #2 () -- "breakContinue.dp":4,4-4,13
    _ =>
      jump #3 () -- "breakContinue.dp":2,2-6,3

fun useBreak() -> #4 -- "breakContinue.dp":9,0-15,1 =
  loop #5():
    block #6() =
      jump #4 () -- "breakContinue.dp":9,0-15,1
    in
    match 1 -- "breakContinue.dp":10,2-14,3:
    1 =>
      $2 = 1 -- "breakContinue.dp":11,4-11,15
      jump #6 () -- "breakContinue.dp":12,4-12,10
    _ =>
      jump #6 () -- "breakContinue.dp":10,2-14,3


fun f() -> #1 -- "controlFlow.dp":1,0-19,1 =
  block #2() =
    block #3() =
      block #4() =
        jump #1 () -- "controlFlow.dp":1,0-19,1
      in
      match 1 -- "controlFlow.dp":14,2-18,3:
      1 =>
        $1 = 4 -- "controlFlow.dp":15,4-15,15
        jump #4 () -- "controlFlow.dp":14,2-18,3
      _ =>
        $2 = 5 -- "controlFlow.dp":17,4-17,15
        jump #4 () -- "controlFlow.dp":14,2-18,3
    in
    match 1 -- "controlFlow.dp":8,2-12,3:
    1 =>
      jump #1 (2) -- "controlFlow.dp":9,11-9,12
    _ =>
      $3 = 3 -- "controlFlow.dp":11,4-11,15
      jump #3 () -- "controlFlow.dp":8,2-12,3
  in
  match 1 -- "controlFlow.dp":2,2-6,3:
  1 =>
    $4 = 0 -- "controlFlow.dp":3,4-3,15
    jump #2 () -- "controlFlow.dp":2,2-6,3
  _ =>
    $5 = 1 -- "controlFlow.dp":5,4-5,15
    jump #2 () -- "controlFlow.dp":2,2-6,3

fun g() -> #5 -- "controlFlow.dp":21,0-40,1 =
  block #6() =
    loop #7():
      match 1 -- "controlFlow.dp":22,2-27,3:
      1 =>
        block #8() =
          $6 = 1 -- "controlFlow.dp":26,4-26,15
          jump #7 () -- "controlFlow.dp":22,2-27,3
        in
        match 1 -- "controlFlow.dp":23,4-25,5:
        1 =>
          jump #5 (0) -- "controlFlow.dp":24,13-24,14
        _ =>
          jump #8 () -- "controlFlow.dp":23,4-25,5
      _ =>
        jump #6 () -- "controlFlow.dp":22,2-27,3
  in
  block #9() =
    loop #10():
      match 1 -- "controlFlow.dp":28,2-39,3:
      1 =>
        $7 = 2 -- "controlFlow.dp":29,4-29,15
        block #11() =
          block #12() =
            loop #13():
              match 1 -- "controlFlow.dp":33,4-38,5:
              1 =>
                block #14() =
                  $8 = 5 -- "controlFlow.dp":37,6-37,17
                  jump #13 () -- "controlFlow.dp":33,4-38,5
                in
                match 1 -- "controlFlow.dp":34,6-36,7:
                1 =>
                  jump #5 (4) -- "controlFlow.dp":35,15-35,16
                _ =>
                  jump #14 () -- "controlFlow.dp":34,6-36,7
              _ =>
                jump #12 () -- "controlFlow.dp":33,4-38,5
          in
          jump #10 () -- "controlFlow.dp":28,2-39,3
        in
        match 1 -- "controlFlow.dp":30,4-32,5:
        1 =>
          jump #5 (3) -- "controlFlow.dp":31,13-31,14
        _ =>
          jump #11 () -- "controlFlow.dp":30,4-32,5
      _ =>
        jump #9 () -- "controlFlow.dp":28,2-39,3
  in
  jump #5 () -- "controlFlow.dp":21,0-40,1


fun main() -> #1 -- "expr.dp":1,0-8,1 =
  $1 = (ParseTree.BinOpCalculate ParseTree.BinOpAdd)(1, 2) -- "expr.dp":2,10-2,15
  $2 = (ParseTree.BinOpCalculate ParseTree.BinOpMul)($1, 3) -- "expr.dp":3,14-3,19
  $3 = (ParseTree.BinOpCalculate ParseTree.BinOpAdd)($1, $2) -- "expr.dp":3,10-3,19
  $4 = (ParseTree.BinOpCalculate ParseTree.BinOpAdd)($3, 4) -- "expr.dp":5,12-5,17
  $5 = (ParseTree.BinOpCalculate ParseTree.BinOpSub)($1, 3) -- "expr.dp":7,10-7,15
  jump #1 () -- "expr.dp":1,0-8,1


fun f1($1) -> #1 -- "match.dp":12,0-18,1 =
  block #2() =
    jump #1 (0) -- "match.dp":17,9-17,10
  in
  block #3() =
    jump #1 (1) -- "match.dp":14,21-14,22
  in
  block #4() =
    jump #1 (2) -- "match.dp":15,22-15,23
  in
  match $1.tag -- _:
  1 =>
    jump #4 () -- "match.dp":15,13-15,26
  0 =>
    jump #3 () -- "match.dp":14,12-14,25

fun f2($2) -> #5 -- "match.dp":20,0-27,1 =
  block #6() =
    jump #5 (4) -- "match.dp":26,9-26,10
  in
  block #7() =
    jump #5 (1) -- "match.dp":22,26-22,27
  in
  block #8() =
    jump #5 (2) -- "match.dp":23,26-23,27
  in
  block #9() =
    jump #5 (3) -- "match.dp":24,31-24,32
  in
  $4 = $2.1 -- _
  $3 = $2.0 -- _
  match $3.tag -- _:
  1 =>
    match $4.tag -- _:
    1 =>
      jump #9 () -- "match.dp":24,22-24,35
    0 =>
      jump #8 () -- "match.dp":23,17-23,30
  0 =>
    jump #7 () -- "match.dp":22,17-22,30

fun f3($5) -> #10 -- "match.dp":34,0-42,1 =
  block #11() =
    jump #10 (5) -- "match.dp":41,9-41,10
  in
  block #12() =
    jump #10 (1) -- "match.dp":36,18-36,19
  in
  block #13() =
    jump #10 (2) -- "match.dp":37,34-37,35
  in
  block #14() =
    jump #10 (3) -- "match.dp":38,34-38,35
  in
  block #15($6, $7) =
    jump #10 (4) -- "match.dp":39,30-39,31
  in
  match $5.tag -- _:
  0 =>
    jump #12 () -- "match.dp":36,9-36,22
  1 =>
    $10 = $5.as(1).2 -- _
    $9 = $5.as(1).1 -- _
    $8 = $5.as(1).0 -- _
    match $8.tag -- _:
    1 =>
      match $9.tag -- _:
      0 =>
        jump #14 () -- "match.dp":38,25-38,38
      _ =>
        match $10.tag -- _:
        0 =>
          jump #15 ($9, $8) -- "match.dp":39,21-39,34
        _ =>
          abort!
    0 =>
      match $10.tag -- _:
      1 =>
        jump #13 () -- "match.dp":37,25-37,38
      0 =>
        jump #15 ($9, $8) -- "match.dp":39,21-39,34

fun f4($11) -> #16 -- "match.dp":52,0-60,1 =
  block #17() =
    jump #16 (5) -- "match.dp":59,9-59,10
  in
  block #18($12, $13) =
    $14 = (ParseTree.BinOpCalculate ParseTree.BinOpAdd)($13, $12) -- "match.dp":54,55-54,60
    jump #16 ($14) -- "match.dp":54,55-54,60
  in
  block #19() =
    jump #16 (2) -- "match.dp":55,45-55,46
  in
  block #20() =
    jump #16 (3) -- "match.dp":56,38-56,39
  in
  block #21() =
    jump #16 (4) -- "match.dp":57,44-57,45
  in
  $18 = $11.3 -- _
  $17 = $11.2 -- _
  $16 = $11.1 -- _
  $15 = $11.0 -- _
  match $16.tag -- _:
  0 =>
    match $17.tag -- _:
    1 =>
      jump #20 () -- "match.dp":56,29-56,42
    0 =>
      jump #18 ($18, $15) -- "match.dp":54,46-54,63
  1 =>
    $21 = $16.as(1).2 -- _
    $20 = $16.as(1).1 -- _
    $19 = $16.as(1).0 -- _
    match $19.tag -- _:
    0 =>
      jump #19 () -- "match.dp":55,36-55,49
    _ =>
      match $17.tag -- _:
      1 =>
        jump #20 () -- "match.dp":56,29-56,42
      0 =>
        $22 = (ParseTree.BinOpCompare ParseTree.BinOpEq)($18, 42) -- _
        match $22 -- _:
        1 =>
          jump #21 () -- "match.dp":57,35-57,48
        _ =>
          abort!

fun f5($23) -> #22 -- "match.dp":62,0-71,1 =
  block #23() =
    jump #22 (3) -- "match.dp":70,9-70,10
  in
  block #24() =
    jump #22 (0) -- "match.dp":64,18-64,19
  in
  block #25() =
    jump #22 (42) -- "match.dp":65,19-65,21
  in
  block #26() =
    jump #22 (43) -- "match.dp":66,19-66,21
  in
  block #27() =
    jump #22 (1) -- "match.dp":67,18-67,19
  in
  block #28() =
    jump #22 (2) -- "match.dp":68,18-68,19
  in
  $26 = (ParseTree.BinOpCompare ParseTree.BinOpEq)($23, 0) -- _
  match $26 -- _:
  1 =>
    jump #24 () -- "match.dp":64,9-64,22
  _ =>
    $25 = (ParseTree.BinOpCompare ParseTree.BinOpEq)($23, 42) -- _
    match $25 -- _:
    1 =>
      jump #25 () -- "match.dp":65,10-65,24
    _ =>
      $24 = (ParseTree.BinOpCompare ParseTree.BinOpEq)($23, 1) -- _
      match $24 -- _:
      1 =>
        jump #27 () -- "match.dp":67,9-67,22
      _ =>
        jump #28 () -- "match.dp":68,9-68,22


